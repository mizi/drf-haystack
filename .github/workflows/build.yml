name: Test

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    name: build (Python ${{ matrix.python-version }}, Django ${{ matrix.django-version }}), ElasticSearch ${{ matrix.es-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10', 'pypy3' ]
        django-version: [ '3.2', '4.0', '4.1' ]
        es-version: [ '1-alpine', '2-alpine', '5-alpine', '7.17.6' ]

    services:
      elasticsearch:
        image: elasticsearch:${{ matrix.es-version }}-alpine
        ports:
          - 9200

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key:
            ${{ matrix.python-version }}-v1-${{ hashFiles('**/Pipfile.lock') }}-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/tox.ini') }}
          restore-keys: |
            ${{ matrix.python-version }}-v1-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade tox tox-gh-actions
      - name: Set version variables
        id: set-versions
        run: |
          es_version="${{ matrix.es-version }}"
          echo "::set-output name=es::${es_version:0:1}"
      - name: Tox tests
        run: |
          tox -v
        env:
          DJANGO_VERSION: ${{ matrix.django-version }}
          ES_VERSION: ${{ steps.set-versions.outputs.es }}
